//http://merle-amber.blogspot.com.by/2009/02/orm.html

Обслуживает набор объектов, изменяемых в бизнес-транзакции (бизнес-действии) 
и управляет записью изменений и разрешением проблем конкуренции данных.

Когда необходимо писать и читать из БД, важно следить за тем, что 
изменилось и если не изменилось - не записывать данные в БД. Также 
необходимо вставлять данные о новых объектах и удалять данные о старых.

Можно записывать в БД каждое изменение объекта, но это приведет к 
большому количеству мелких запросов к БД, что закончится замедлением 
работы приложения. Более того, это требует держать открытую транзакцию 
все время работы приложения, что непрактично, если приложение обрабатывает
 несколько запросов одновременно. 

Реализация паттерна Unit of Work следит за всеми действиями приложения, 
которые могут изменить БД в рамках одного бизнес-действия.
 Когда бизнес-действие завершается, Unit of Work выявляет 
 все изменения и вносит их в БД.
 http://design-pattern.ru/patterns/unit-of-work.html 


 Класс “единица работы” служит одной цели: чтобы была уверенность 
 в том, что при использовании множества репозиториев, которые 
 работают с базой данных,  работа осуществлялась с одним и тем
  же экземпляром DbContext

